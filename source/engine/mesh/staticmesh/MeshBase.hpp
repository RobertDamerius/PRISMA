#pragma once


#include <Common.hpp>
#include <AABB.hpp>


/**
 * @brief This class represents the abstract base class for a mesh.
 */
class MeshBase {
    public:
        /**
         * @brief Destroy the base mesh object.
         */
        virtual ~MeshBase(){}

        /**
         * @brief Read mesh data from file.
         * @param[in] filename Name of the file.
         * @return True if success, false otherwise.
         */
        virtual bool ReadFromFile(std::string filename) = 0;

        /**
         * @brief Generate GL content (vao, vbo, ebo) and free memory.
         * @return True if success, false otherwise. If this mesh has already been generated, false is returned.
         */
        virtual bool Generate(void) = 0;

        /**
         * @brief Delete all GL content that was generated by the @ref Generate member function.
         */
        virtual void Delete(void) = 0;

        /**
         * @brief Get the axis-aligned bounding box for all mesh vertices.
         */
        virtual AABB GetAABBOfVertices(void) = 0;
};

